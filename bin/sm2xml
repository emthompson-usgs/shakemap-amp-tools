#!/usr/bin/env python

# stdlib imports
import os.path
import argparse
import glob
import string
import warnings

# third party imports
import openpyxl
from obspy.core.utcdatetime import UTCDateTime

# local imports
from impactutils.io.table import dataframe_to_xml
from libcomcat.search import get_event_by_id
from gmprocess.stream import directory_to_dataframe
from amptools.utils import get_output_dir


def main(args):
    # gather arguments
    indir = args.indir
    eventid = args.eventid

    outdir = get_output_dir(eventid, debugdir=args.debug_dir)
    if outdir is None:
        print('No ShakeMap data folder for event %s could be found. Exiting.' % eventid)
        sys.exit(1)

    imts = ['PGA', 'PGV', 'SA(0.3)', 'SA(1.0)', 'SA(3.0)']
    imcs = ['CHANNELS']

    event = get_event_by_id(eventid)
    lat = event.latitude
    lon = event.longitude
    etime = UTCDateTime(event.time)

    # Extract station/peak information from each stream, save to a dataframe
    dataframe = directory_to_dataframe(indir, imcs=imcs, imts=imts,
                                       lat=lat, lon=lon, event_time=etime)

    # Bail if we didn't find any appropriate files
    if not len(dataframe):
        print('No data files matching any known format found in %s.  Exiting.' %
              (indir))
        sys.exit(1)

    # Save peak info in spreadsheet form
    # we're forced here to have the index column, as much as we might not want it
    netid = dataframe['NETID'].iloc[0]
    outfile_excel = os.path.join(outdir, '%s_dat.xlsx' % netid)
    dataframe.to_excel(outfile_excel)

    # modify the spreadsheet to add a reference at the top and remove index column
    # _clean_sheet(outfile_excel, dataframe)
    if 'SOURCE' in dataframe.columns:
        source = dataframe['SOURCE'].iloc[0]
    else:
        source = 'Unknown'
    wb = openpyxl.load_workbook(outfile_excel)
    ws = wb.active
    ws.delete_cols(1)
    ws.insert_rows(1)
    ws['A1'] = 'Reference'
    ws['B1'] = source
    wb.save(outfile_excel)
    wb.close()

    print('Wrote Excel file %s' % outfile_excel)

    # Write out the ShakeMap XML data format
    xmlfile = os.path.join(outdir, '%s_dat.xml' % netid)
    dataframe_to_xml(dataframe, xmlfile, reference=source)
    print('Peak ground motions written to file %s.' % xmlfile)


if __name__ == '__main__':
    desc = '''Convert a directory of strong motion data files into ShakeMap xml.

This program looks for a file ~/.amptools/config.yml, which should be formatted
thusly:

sm2xml:
  imtlist: [PGA, PGV, SA(0.3), SA(1.0), SA(3.0)]

Where imtlist is the list of the desired intensity measure types. Valid
IMTs are currently:
 - PGA
 - PGV
 - SA(PERIOD) where PERIOD is a valid float in seconds in the valid range of
   spectral periods.

    '''
    formatter = argparse.RawDescriptionHelpFormatter
    parser = argparse.ArgumentParser(description=desc,
                                     formatter_class=formatter)
    parser.add_argument('eventid', help='Earthquake event ID.')
    parser.add_argument('indir', help='Directory containing input data.')
    parser.add_argument(
        '--debug-dir', help='Data directory - to be used for testing only!')
    pargs = parser.parse_args()
    main(pargs)
